# This file, in conjuction with your .env file,
# should be used to configure the apollos server.

# Any values you wish to keep secret should be placed in `.env`
# You can access those values (and any other values in your environment)
# using the ${VARIABLE_NAME} syntax

# This file should be checked into version control.
# `.env` should NOT be checked into version control.
APP:
  # This variable is used for generating deep links.
  # It should match whatver is in your Info.plist `CFBundleURLTypes`
  DEEP_LINK_HOST: ${DEEP_LINK_HOST}
  UNIVERSAL_LINK_HOST: ${UNIVERSAL_LINK_HOST}
  ROOT_API_URL: ${ROOT_URL}
  JOBS_USERNAME: ${JOBS_USERNAME}
  JOBS_PASSWORD: ${JOBS_PASSWORD}
DATABASE:
  URL: ${DATABASE_URL}
BUGSNAG:
  API_KEY: ${BUGSNAG_KEY}
ROCK:
  URL: ${ROCK_URL}
  API_TOKEN: ${ROCK_TOKEN}
UNIVERSAL_LINKS:
  APPLE_APP_ID: ${APPLE_APP_ID}
  APPLE_TEAM_ID: ${APPLE_TEAM_ID}
  APP_STORE_LINK: ${IOS_REDIRECT}
  PLAY_STORE_LINK: ${ANDROID_REDIRECT}
  GOOGLE_APP_ID: ${GOOGLE_APP_ID}
  GOOGLE_KEYSTORE_SHA256: ${GOOGLE_KEYSTORE_SHA256}
ONE_SIGNAL:
  APP_ID: ${ONE_SIGNAL_APP_ID}
  REST_KEY: ${ONE_SIGNAL_REST_KEY}
CHURCH_ONLINE:
  URL: ${CHURCH_ONLINE_URL}
  WEB_VIEW_URL: https://apollos.online.church/
ALGOLIA:
  APPLICATION_ID: ${ALGOLIASEARCH_APPLICATION_ID}
  API_KEY: ${ALGOLIASEARCH_API_KEY}
TWILIO:
  ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
  AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
  FROM_NUMBER: ${TWILIO_FROM_NUMBER}
PASS:
  TEMPLATES:
    CHECKIN: ${PWD}/wallet-passes/checkin.pass
  CERTIFICATES:
    WWDR: ${PASS_WWDR_CERT}
    SIGNER_CERT: ${PASS_SIGNER_CERT}
    SIGNER_KEY: ${PASS_SIGNER_KEY}
    SIGNER_KEY_PASSPHRASE: ${PASS_SIGNER_PASSPHRASE}
BIBLE_API:
  KEY: ${BIBLE_API_KEY}
  DEFAULT_VERSION: ESV
CLOUDINARY:
  URL: ${CLOUDINARY_URL}
SIMPLEDONATION:
  KEY: ${SIMPLE_DONATION_KEY}
SUGGESTED_FOLLOWS:
  -
    id: dbf57ba9-2023-4668-859a-52f2be1e0386 # Nick Roland
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 48a55287-bcf0-44e1-9d26-2fd5b310d282 # Collin Jackson
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 0ee94504-82b1-4291-82c4-da4eb411e7a8 # Carrie Tucker
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: ded01391-dca5-45c7-b2bc-b2603a562d79 # Ryan Ceola
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 5558716f-04bc-40eb-9bce-f9ee4769c920 # Doug Raines
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: fae3ddb0-e435-4133-9316-67366cb5e770 # Ashley Covert
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 757e8812-0600-460f-b18b-5b6279e0e79f # Rodney Holmstrom
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 82af7879-fcd2-4af2-8d78-f6a0d9ce5265 # Mickey Rapier
    campusId: 64fd569a-1d74-4cc6-bc54-d56a85818629 # Mosaic
  -
    id: 0843299b-da61-488d-8025-41553625b61a # Sam Hannon
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: 006b5b8c-c383-4bfb-9227-0baa2df04971 # John Barclay
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: e88dd92d-7e60-45f8-918c-70cd4664c4ad # Christy Morris
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: 1184231a-9689-4ec5-810c-47fbdca18700 # Pat Anderson
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: a1ee1ef5-526f-4671-93e1-ac7da9c35868 # Emma Hansen
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: 757e8812-0600-460f-b18b-5b6279e0e79f # Rodney Holmstrom
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: 82af7879-fcd2-4af2-8d78-f6a0d9ce5265 # Mickey Rapier
    campusId: e7098d9a-d52b-4442-976d-bc21b45faa7f # Rogers
  -
    id: 3807eaab-1edf-48e2-8983-8b40a901125a # Clark Nolen
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: fee59f94-79fa-447d-8163-a824afadbdc6 # Michael Smith
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: 76f4f9b8-5486-4f4e-93ac-f2f58620be7f # Margo Bodishbaugh
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: e8243ede-db94-4eaa-83f4-802d79b879b2 # Dave Matthews
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: ca0f503e-bdbf-4ed7-b7e8-728a0d0ec53e # Kerri Holt
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: bab5fe6f-ee58-4698-acd2-51ed6f7f0296 # Andy Petry
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: 82af7879-fcd2-4af2-8d78-f6a0d9ce5265 # Mickey Rapier
    campusId: 973c6561-5cfe-4821-b5c8-7dcda61b5785 # Fayetteville
  -
    id: 1fe55286-d421-4dde-a37f-72ce118c4146 # Mark Schatzman
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: 58f384a7-9c57-4425-bf0f-4b3f603af36f # Abel Schafer
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: b317e9b4-2f9b-426c-bcb5-07623e2675c3 # Bart Sego
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: a53704a2-cb6e-40e4-b8a0-42b22cf0bfd5 # Kathy Biggerstaff
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: 83105408-a93f-4107-9f1c-2e62611cc419 # Seth Primm
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: 757e8812-0600-460f-b18b-5b6279e0e79f # Rodney Holmstrom
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville
  -
    id: 82af7879-fcd2-4af2-8d78-f6a0d9ce5265 # Mickey Rapier
    campusId: b10f5f69-f92b-4b47-985a-abcce846fde2 # Bentonville

# This key holds various properties that allow our GraphQL server to map to your Rock Instance
ROCK_MAPPINGS:
  CONTENT_ITEM:
    ContentSeriesContentItem:
      # When resolving "ContentSeriesContentItem" look in rock for a "ContentChannelItem"
      EntityType: ContentChannelItem
      # Used to define the subset of content channels types that use this specific type.
      ContentChannelId: [12, 37, 44]
    DevotionalContentItem:
      EntityType: ContentChannelItem
      ContentChannelId: [32, 38]
    MediaContentItem:
      EntityType: ContentChannelItem
    UniversalContentItem:
      EntityType: ContentChannelItem
    WeekendContentItem:
      ContentChannelId: [10]
      EntityType: ContentChannelItem
    ContentItem:
      EntityType: ContentChannelItem

  DATAVIEW_CATEGORIES:
    # Id of the category used to store all persona dataviews
    PersonaId: 210

  ALL_CONTENT_CHANNELS:
    - 12
    - 32
    - 10
    - 38
    - 28

  SERMON_CHANNEL_ID: 10

TABS:
  HOME:
    - algorithms: [DAILY_PRAYER]
      isCard: false
      type: PrayerList
      subtitle: Daily Prayer
    ## These channels are for Advent Devotionals and can be reused yearly
    # - algorithms: # Birth of Christ in Scripture
    #   - type: SINGLE_CONTENT_ITEM_BY_ID
    #     arguments:
    #       itemRockId:
    #         - 3877
    #   type: VerticalCardList
    # - algorithms: # Advent Devos Parent
    #   - type: CONTENT_FEED
    #     arguments:
    #       channelIds:
    #         - 44
    #       limit: 1
    #   subtitle: Advent Devotionals
    #   type: VerticalCardList
    # - algorithms: # Advent Devos HeroList
    #   - type: CONTENT_FEED
    #     arguments:
    #       channelIds:
    #         - 28
    #       limit: 3
    #   subtitle: Latest Devotionals
    #   type: HeroCardList
    #   primaryAction:
    #     action: OPEN_CHANNEL
    #     title: 'View All'
    #     relatedNode:
    #       __typename: ContentChannel
    #       id: 28
    #       name: Devotionals
    - subtitle: Grow Together # This pulls the Daily Scripture for today
      algorithms:
      - type: CONTENT_FEED
        arguments:
          limit: 1
          channelIds:
            - 32
          subtitle: Today's Reading
      type: VerticalCardList
    - subtitle: Weekly Readings # This pulls the 5 Daily Scriptures for this week
      algorithms:
        - type: WEEKLY_SCRIPTURE_FEED
          arguments:
            channelIds:
              - 32
      type: ActionList
      isCard: false
    - algorithms: # Weekly Discussion Guide
        - type: CONTENT_FEED
          arguments:
            limit: 1
            channelIds:
              - 41
      type: VerticalCardList
    - subtitle: Featured
      algorithms:
        - type: CONTENT_FEED
          arguments:
            limit: 6
            channelIds:
              - 19
      type: HorizontalCardList

  READ: # AKA EVENTS!
    - subtitle: Featured
      algorithms:
      - type: CONTENT_FEED
        arguments:
          limit: 6
          channelIds: [19]
      type: VerticalCardList
    - subtitle: Community
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Community
            channelIds: [11]
            limit: 10
    - subtitle: Family
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Family
            channelIds: [11]
            limit: 10
    - subtitle: Training
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Training
            channelIds: [11]
            limit: 10
    - subtitle: Care
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Care
            channelIds: [11]
            limit: 10
    - subtitle: Local
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Local
            channelIds: [11]
            limit: 10
    - subtitle: Global
      type: HorizontalCardList
      algorithms:
        - type: CONTENT_FEED
          arguments:
            category: Global
            channelIds: [11]
            limit: 10
    - type: ActionTable
      actions:
        [
          {
            title: View All Events,
            action: OPEN_AUTHENTICATED_URL,
            relatedNode: { __typename: Url, url: 'https://www.fellowshiprogers.org/eventsandclasses' },
          },
        ]

  WATCH:
    - algorithms:
      - type: CONTENT_FEED
        arguments:
          channelIds:
            - 10
          limit: 4
      subtitle: Latest Teachings
      type: HeroList
      primaryAction:
        # Right now, you hardcode exactly what GraphQL should return.
        # Long term, we hope to have a more sophisticated mechanism for driving this field
        action: OPEN_CHANNEL
        title: 'View more'
        relatedNode:
          __typename: ContentChannel
          name: Recent Teachings
          id: 10

    - subtitle: Recent Series # Missing Content Channel in Rock
      algorithms:
        - type: CONTENT_FEED
          arguments:
            limit: 6
            channelIds:
              - 12
      type: HorizontalCardList
      primaryAction:
        action: OPEN_URL
        title: 'View all'
        relatedNode:
          __typename: Url
          url: 'https://fellowshipnwa.org/services'

    - subtitle: Podcasts # Missing Content Channel in Rock
      algorithms:
        - type: PRIORITY_CONTENT_FEED
          arguments:
            limit: 6
            channelIds:
              - 34
      type: HorizontalCardList
      primaryAction:
        action: OPEN_CHANNEL
        title: 'View All'
        relatedNode:
          __typename: ContentChannel
          id: 34
          name: Podcasts

    - subtitle: Fellowship Worship
      algorithms:
        - type: PRIORITY_CONTENT_FEED
          arguments:
            limit: 6
            channelIds:
              - 35
      type: HorizontalCardList
      primaryAction:
        action: OPEN_CHANNEL
        title: 'View All'
        relatedNode:
          __typename: ContentChannel
          id: 35
          name: Worship Music

  GIVE:
    - type: WebView
      url: ${ROOT_URL}/simpledonation

  # PRAY: # NOT USED
  #   - algorithms: [DAILY_PRAYER]
  #     isCard: false
  #     type: PrayerList
  #     title: Daily Prayer
  #   - type: VerticalPrayerList
  #     title: Your Prayers

  CONNECT:
    - type: ActionTable
      title: Connect to Apollos
      actions:
        [
          {
            title: Google,
            action: OPEN_URL,
            relatedNode: { __typename: Url, url: 'https://www.google.com' },
          },
          {
            title: Facebook,
            action: OPEN_URL,
            relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
          },
        ]
